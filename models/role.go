package models

// Generated by https://quicktype.io
import (
	. "HOMEWORK/database"
)

type Role struct {
	ID      int     `json:"id"`
	Name    string  `json:"name"`
	Summary string  `json:"summary"`
	Skills  []Skill `json:"skills"`
}

type Skill struct {
	ID   int64  `json:"id"`
	Type string `json:"type"`
	Name string `json:"name"`
}

var roles = []Role{}

func InitData() {
	GetJSONData(&roles)
}

func SelectRole(id int) Role {
	for i := 0; i < len(roles); i++ {
		if roles[i].ID == id {
			return roles[i]
		}
	}
	return Role{}
}

func SelectRoles() []Role {
	return roles
}

func InsertRole(r Role) []Role {
	roles = append(roles, r)
	return roles
}

func UpdateRole(r Role) Role {
	for i := 0; i < len(roles); i++ {
		if roles[i].ID == r.ID {
			roles[i].Name = r.Name
			roles[i].Summary = r.Summary
			break
		}
	}
	return r
}

func DeleteRole(id int) bool {
	for i, role := range roles {
		if role.ID == id {
			roles = append(roles[0:i], roles[i+1:]...)
			return true
		}
	}
	return false
}
